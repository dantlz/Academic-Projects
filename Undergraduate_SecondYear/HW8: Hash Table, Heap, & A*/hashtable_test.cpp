#include "hashtable.h"
#include <iostream>

using namespace std;

int main(){
	HashTable table;
	
// 	table.add(make_pair("one",1));
// 	table.add(make_pair("two",2));
// 	table.add(make_pair("three",3));
// 	table.add(make_pair("a",3));
// 	table.add(make_pair("b",3));
// 	table.add(make_pair("c",3));
// 	table.add(make_pair("d",3));
// 	table.add(make_pair("e",3));
// 	table.add(make_pair("f",3));
// 	table.add(make_pair("g",3));
// 	table.add(make_pair("h",3));
// 	table.add(make_pair("i",3));
// 	table.add(make_pair("j",3));
// 	table.add(make_pair("k",3));
// 	table.add(make_pair("l",3));
// 	table.add(make_pair("m",3));
// 	table.add(make_pair("n",3));
// 	table.add(make_pair("o",3));
// 	table.add(make_pair("p",3));
// 	table.add(make_pair("q",3));
// 	table.add(make_pair("r",3));
// 	table.add(make_pair("s",3));
// 	table.add(make_pair("t",3));
// 	table.add(make_pair("u",3));
// 	table.add(make_pair("v",3));
// 	table.add(make_pair("w",3));
// 	table.add(make_pair("x",3));
// 	table.add(make_pair("y",3));
// 	table.add(make_pair("z",3));
// 	table.add(make_pair("aa",3));
// 	table.add(make_pair("bb",3));
// 	table.add(make_pair("cc",3));
// 	table.add(make_pair("dd",3));
// 	table.add(make_pair("ee",3));
// 	table.add(make_pair("ff",3));
// 	table.add(make_pair("gg",3));
// 	table.add(make_pair("hh",3));
// 	table.add(make_pair("ii",3));
// 	table.add(make_pair("jj",3));
// 	table.add(make_pair("kk",3));
// 	table.add(make_pair("ll",3));
// 	table.add(make_pair("mm",3));
// 	table.add(make_pair("nn",3));
// 	table.add(make_pair("oo",3));
// 	table.add(make_pair("pp",3));
// 	table.add(make_pair("qq",3));
// 	table.add(make_pair("rr",3));
// 	table.add(make_pair("ss",3));
// 	table.add(make_pair("tt",3));
// 	table.add(make_pair("uu",3));
// 	table.add(make_pair("vv",3));
// 	table.add(make_pair("ww",3));
// 	table.add(make_pair("xx",3));
// 	table.add(make_pair("yy",3));
// 	table.add(make_pair("zz",3));
// 	table.add(make_pair("zz",3));

// 	cout<<"Value for two is "<<table.find("two")<<endl;

// 	table.remove("two");
// 	try{
// 		table.find("two");
// 	}
// 	catch(std::exception e){
// 		cout<<"Success! Error was caught!"<<endl;
// 	}
// 	cout<<"Value for three is "<<table.find("three")<<endl;
// 	table.update(make_pair("three",33));
// 	cout<<"Value for three is "<<table.find("three")<<" and it's supposed to be 33"<<endl;
// }

table.add(make_pair("river",0));
table.find("river");
table.remove("river");
table.add(make_pair("liver",0));
table.find("liver");
table.add(make_pair("rover",1));
table.find("rover");
table.remove("liver");
table.add(make_pair("lover",1));
table.find("lover");
table.remove("rover");
table.add(make_pair("cover",1));
table.find("cover");
table.add(make_pair("hover",2));
table.find("hover");
table.add(make_pair("mover",3));
table.find("mover");
table.remove("lover");
table.add(make_pair("coves",3));
table.find("coves");
table.remove("mover");
table.update(make_pair("hover",2));
table.update(make_pair("coves",0));
table.remove("hover");
table.update(make_pair("cover",1));
table.update(make_pair("coves",0));
table.remove("cover");
table.remove("coves");
table.add(make_pair("cores",0));
table.find("cores");
table.add(make_pair("cotes",1));
table.find("cotes");
table.add(make_pair("cozes",2));
table.find("cozes");
table.remove("cores");
table.add(make_pair("cords",2));
table.find("cords");
table.add(make_pair("corns",3));
table.find("corns");
table.add(make_pair("lores",4));
table.find("lores");
table.add(make_pair("pores",5));
table.find("pores");
table.update(make_pair("cords",2));
table.update(make_pair("pores",5));
table.add(make_pair("sores",6));
table.find("sores");
table.update(make_pair("pores",2));
table.update(make_pair("sores",6));
table.update(make_pair("cozes",0));
table.update(make_pair("sores",2));
table.add(make_pair("wores",7));
table.find("wores");
table.update(make_pair("corns",3));
table.update(make_pair("wores",7));
table.remove("sores");
table.update(make_pair("cozes",2));
table.update(make_pair("corns",0));
table.update(make_pair("pores",6));
table.update(make_pair("corns",2));
table.remove("cozes");
table.update(make_pair("pores",2));
table.update(make_pair("corns",0));
table.remove("pores");
table.update(make_pair("cotes",1));
table.update(make_pair("cords",0));
table.update(make_pair("lores",4));
table.update(make_pair("cords",1));
table.remove("cotes");
table.update(make_pair("lores",1));
table.update(make_pair("cords",0));
table.update(make_pair("wores",3));
table.update(make_pair("cords",1));
table.remove("lores");
table.update(make_pair("wores",1));
table.update(make_pair("cords",0));
table.remove("wores");
table.remove("corns");
table.add(make_pair("cards",1));
table.find("cards");
table.add(make_pair("colds",2));
table.find("colds");
table.remove("cords");
table.remove("colds");
table.add(make_pair("bards",1));
table.find("bards");
table.add(make_pair("tards",2));
table.find("tards");
table.add(make_pair("wards",3));
table.find("wards");
table.remove("cards");
table.remove("wards");
table.add(make_pair("barrs",2));
table.find("barrs");
table.remove("tards");
table.update(make_pair("bards",1));
table.update(make_pair("barrs",0));
table.remove("bards");
table.remove("barrs");
table.add(make_pair("barrt",0));
table.find("barrt");
table.remove("barrt");
table.add(make_pair("baort",0));
table.find("baort");
table.remove("baort");
table.add(make_pair("brort",0));
table.find("brort");
table.remove("brort");
table.add(make_pair("trort",0));
table.find("trort");
table.remove("trort");
table.add(make_pair("thort",0));
table.find("thort");
table.remove("thort");
table.add(make_pair("short",0));
table.find("short");
table.remove("short");
table.add(make_pair("shore",0));
table.find("shore");
table.add(make_pair("sport",1));
table.find("sport");
table.remove("shore");
table.add(make_pair("score",1));
table.find("score");
table.add(make_pair("shone",2));
table.find("shone");
table.add(make_pair("spore",3));
table.find("spore");
table.add(make_pair("store",4));
table.find("store");
table.add(make_pair("swore",5));
table.find("swore");
table.update(make_pair("shone",2));
table.update(make_pair("swore",5));
table.update(make_pair("sport",0));
table.update(make_pair("swore",2));
table.remove("swore");
table.update(make_pair("sport",2));
table.update(make_pair("shone",0));
table.remove("sport");
table.remove("store");
table.add(make_pair("scope",3));
table.find("scope");
table.remove("spore");
table.update(make_pair("shone",2));
table.update(make_pair("scope",0));
table.remove("shone");
table.update(make_pair("score",1));
table.update(make_pair("scope",0));
table.remove("score");
table.remove("scope");
table.add(make_pair("scops",0));
table.find("scops");
table.add(make_pair("snope",1));
table.find("snope");
table.remove("scops");
table.add(make_pair("soops",1));
table.find("soops");
table.remove("snope");
table.add(make_pair("snipe",1));
table.find("snipe");
table.remove("soops");
table.add(make_pair("swipe",1));
table.find("swipe");
table.update(make_pair("snipe",0));
table.update(make_pair("swipe",1));
table.remove("swipe");
table.add(make_pair("swipp",1));
table.find("swipp");
table.update(make_pair("snipe",0));
table.update(make_pair("swipp",1));
table.remove("swipp");
table.add(make_pair("swepp",1));
table.find("swepp");
table.update(make_pair("snipe",0));
table.update(make_pair("swepp",1));
table.remove("swepp");


}