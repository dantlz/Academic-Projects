In
this
repo
you
will
find
a
base
class
which
implements
everything
any
C
program
needs
to
participate
except
of
course
how
to
decide
what
move
to
make
The
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/prisonersdilemma.h, `prisonersdilemma.h`)
file
implements
this
base
class
with
a
pure
virtual
method
SendMyMove
which
is
left
for
each
individual
program
to
create
All
of
the
data
tracking
is
done
by
the
Dilemma
class
and
the
simulation
can
be
run
from
the
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/runsimulation.cpp, `runsimulation.cpp`)
file
A
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/makefile, `makefile`)
is
also
provided
for
easy
compilation
Several
strategies
have
been
implemented
here
namely
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/lucifer.h, `lucifer.h`)
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/jesus.h, `jesus.h`)
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/fiftyfifty.h, `fiftyfifty.h`)
and
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/titfortat.h, `titfortat.h`)
None
of
these
implemetations
do
anything
particularly
special
but
one
of
them
does
contain
the
optimal
strategy
To
create
your
own
strategy
simply
implement
your
own
class
that
publically
derives
from
Dilemma
and
insert
your
strategy
on
line
LINK (https://github.com/aalogancheney/PrisonersDilema/blob/master/runsimulation.cpp#L18, 18)
Further
Reading
I
was
inspired
to
put
this
project
together
after
listening
to
LINK (radiolab.org, radiolab.org)
s
program
entitled
LINK (http://www.radiolab.org/story/103951-the-good-show/, The Good Show)
which
focused
on
why
human
beings
exhibit
kindness
and
altruism
toward
total
strangers
and
how
this
trait
counterintuitively
conforms
to
the
Theory
of
Evolution
There
are
many
variations
on
the
prisoner
s
dilema
that
alter
the
payouts
the
scenario
and
the
circumstances
under
which
the
game
is
played
Of
particular
interest
is
the
story
of
a
research
team
from
Southampton
University
On
the
th
anniversary
of
the
original
competition
a
new
tournament
was
held
but
with
a
twist
teams
were
allowed
to
submit
multiple
submissions
and
the
team
from
Southampton
submitted
a
total
of
programs
Using
the
first
several
turns
to
establish
contact
the
programs
could
discern
whether
they
were
pitted
against
another
program
or
a
sister
program
In
the
case
the
two
programs
knew
each
other
one
would
sacrifice
itself
by
always
cooperating
and
the
other
would
always
betray
which
in
the
end
caused
several
of
their
programs
to
appear
near
the
top
of
the
leaderboard
standing
on
the
shoulders
of
those
programs
that
sacrificed
themselves
You
can
find
the
results
of
this
competition
LINK (http://www.prisoners-dilemma.com/results/cec04/ipd_cec04_full_run.html, here)
